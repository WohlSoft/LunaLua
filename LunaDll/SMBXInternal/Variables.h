#if !defined(SMBXINTERNAL_VARIABLES_H)
#define SMBXINTERNAL_VARIABLES_H

#include "Types.h"

namespace SMBX13 {
    // Structure representing modMain variables
    static SMBX13::Types::modMain_t& vars = *reinterpret_cast<SMBX13::Types::modMain_t*>(0xB25028);

    // Present structure as namespace as well
    namespace Vars {
        static auto& myBackBuffer = SMBX13::vars.myBackBuffer;
        static auto& myBufferBMP = SMBX13::vars.myBufferBMP;
        static auto& AllCharBlock = SMBX13::vars.AllCharBlock;
        static auto& LocalNick = SMBX13::vars.LocalNick;
        static auto& LocalCursor = SMBX13::vars.LocalCursor;
        static auto& ClientPassword = SMBX13::vars.ClientPassword;
        static auto& ServerPassword = SMBX13::vars.ServerPassword;
        static auto& ServerClear = SMBX13::vars.ServerClear;
        static auto& StartMenu = SMBX13::vars.StartMenu;
        static auto& BlockFlash = SMBX13::vars.BlockFlash;
        static auto& ScrollRelease = SMBX13::vars.ScrollRelease;
        static auto& TakeScreen = SMBX13::vars.TakeScreen;
        static auto& LB = SMBX13::vars.LB;
        static auto& EoT = SMBX13::vars.EoT;
        static auto& conKeyboard = SMBX13::vars.conKeyboard;
        static auto& conJoystick = SMBX13::vars.conJoystick;
        static auto& useJoystick = SMBX13::vars.useJoystick;
        static auto& ScreenShake = SMBX13::vars.ScreenShake;
        static auto& Checkpoint = SMBX13::vars.Checkpoint;
        static auto& MagicHand = SMBX13::vars.MagicHand;
        static auto& testPlayer = SMBX13::vars.testPlayer;
        static auto& ClearBuffer = SMBX13::vars.ClearBuffer;
        static auto& numLocked = SMBX13::vars.numLocked;
        static auto& resChanged = SMBX13::vars.resChanged;
        static auto& inputKey = SMBX13::vars.inputKey;
        static auto& getNewKeyboard = SMBX13::vars.getNewKeyboard;
        static auto& getNewJoystick = SMBX13::vars.getNewJoystick;
        static auto& lastJoyButton = SMBX13::vars.lastJoyButton;
        static auto& GamePaused = SMBX13::vars.GamePaused;
        static auto& MessageText = SMBX13::vars.MessageText;
        static auto& NumSelectWorld = SMBX13::vars.NumSelectWorld;
        static auto& SelectWorld = SMBX13::vars.SelectWorld;
        static auto& ShowFPS = SMBX13::vars.ShowFPS;
        static auto& PrintFPS = SMBX13::vars.PrintFPS;
        static auto& vScreen = SMBX13::vars.vScreen;
        static auto& ScreenType = SMBX13::vars.ScreenType;
        static auto& DScreenType = SMBX13::vars.DScreenType;
        static auto& LevelEditor = SMBX13::vars.LevelEditor;
        static auto& WorldEditor = SMBX13::vars.WorldEditor;
        static auto& PlayerStart = SMBX13::vars.PlayerStart;
        static auto& blockCharacter = SMBX13::vars.blockCharacter;
        static auto& OwedMount = SMBX13::vars.OwedMount;
        static auto& OwedMountType = SMBX13::vars.OwedMountType;
        static auto& AutoX = SMBX13::vars.AutoX;
        static auto& AutoY = SMBX13::vars.AutoY;
        static auto& numStars = SMBX13::vars.numStars;
        static auto& nPlay = SMBX13::vars.nPlay;
        static auto& Water = SMBX13::vars.Water;
        static auto& numWater = SMBX13::vars.numWater;
        static auto& Star = SMBX13::vars.Star;
        static auto& GoToLevel = SMBX13::vars.GoToLevel;
        static auto& StartLevel = SMBX13::vars.StartLevel;
        static auto& NoMap = SMBX13::vars.NoMap;
        static auto& RestartLevel = SMBX13::vars.RestartLevel;
        static auto& LevelChop = SMBX13::vars.LevelChop;
        static auto& FirstBlock = SMBX13::vars.FirstBlock;
        static auto& LastBlock = SMBX13::vars.LastBlock;
        static auto& MidBackground = SMBX13::vars.MidBackground;
        static auto& LastBackground = SMBX13::vars.LastBackground;
        static auto& iBlocks = SMBX13::vars.iBlocks;
        static auto& iBlock = SMBX13::vars.iBlock;
        static auto& numTiles = SMBX13::vars.numTiles;
        static auto& numScenes = SMBX13::vars.numScenes;
        static auto& CustomMusic = SMBX13::vars.CustomMusic;
        static auto& level = SMBX13::vars.level;
        static auto& LevelWrap = SMBX13::vars.LevelWrap;
        static auto& OffScreenExit = SMBX13::vars.OffScreenExit;
        static auto& bgMusic = SMBX13::vars.bgMusic;
        static auto& bgMusicREAL = SMBX13::vars.bgMusicREAL;
        static auto& Background2REAL = SMBX13::vars.Background2REAL;
        static auto& LevelREAL = SMBX13::vars.LevelREAL;
        static auto& curMusic = SMBX13::vars.curMusic;
        static auto& bgColor = SMBX13::vars.bgColor;
        static auto& Background2 = SMBX13::vars.Background2;
        static auto& WorldPath = SMBX13::vars.WorldPath;
        static auto& numWorldPaths = SMBX13::vars.numWorldPaths;
        static auto& numWarps = SMBX13::vars.numWarps;
        static auto& Warp = SMBX13::vars.Warp;
        static auto& Tile = SMBX13::vars.Tile;
        static auto& Scene = SMBX13::vars.Scene;
        static auto& Credit = SMBX13::vars.Credit;
        static auto& numCredits = SMBX13::vars.numCredits;
        static auto& numBlock = SMBX13::vars.numBlock;
        static auto& numBackground = SMBX13::vars.numBackground;
        static auto& numNPCs = SMBX13::vars.numNPCs;
        static auto& numEffects = SMBX13::vars.numEffects;
        static auto& numPlayers = SMBX13::vars.numPlayers;
        static auto& numWorldLevels = SMBX13::vars.numWorldLevels;
        static auto& WorldMusic = SMBX13::vars.WorldMusic;
        static auto& numWorldMusic = SMBX13::vars.numWorldMusic;
        static auto& WorldLevel = SMBX13::vars.WorldLevel;
        static auto& Background = SMBX13::vars.Background;
        static auto& Effect = SMBX13::vars.Effect;
        static auto& NPC = SMBX13::vars.NPC;
        static auto& Block = SMBX13::vars.Block;
        static auto& Player = SMBX13::vars.Player;
        static auto& MarioFrameX = SMBX13::vars.MarioFrameX;
        static auto& MarioFrameY = SMBX13::vars.MarioFrameY;
        static auto& LuigiFrameX = SMBX13::vars.LuigiFrameX;
        static auto& LuigiFrameY = SMBX13::vars.LuigiFrameY;
        static auto& PeachFrameX = SMBX13::vars.PeachFrameX;
        static auto& PeachFrameY = SMBX13::vars.PeachFrameY;
        static auto& ToadFrameX = SMBX13::vars.ToadFrameX;
        static auto& ToadFrameY = SMBX13::vars.ToadFrameY;
        static auto& LinkFrameX = SMBX13::vars.LinkFrameX;
        static auto& LinkFrameY = SMBX13::vars.LinkFrameY;
        static auto& BackgroundFence = SMBX13::vars.BackgroundFence;
        static auto& NPCFrameOffsetX = SMBX13::vars.NPCFrameOffsetX;
        static auto& NPCFrameOffsetY = SMBX13::vars.NPCFrameOffsetY;
        static auto& NPCWidth = SMBX13::vars.NPCWidth;
        static auto& NPCHeight = SMBX13::vars.NPCHeight;
        static auto& NPCWidthGFX = SMBX13::vars.NPCWidthGFX;
        static auto& NPCHeightGFX = SMBX13::vars.NPCHeightGFX;
        static auto& NPCSpeedvar = SMBX13::vars.NPCSpeedvar;
        static auto& NPCIsAShell = SMBX13::vars.NPCIsAShell;
        static auto& NPCIsABlock = SMBX13::vars.NPCIsABlock;
        static auto& NPCIsAHit1Block = SMBX13::vars.NPCIsAHit1Block;
        static auto& NPCIsABonus = SMBX13::vars.NPCIsABonus;
        static auto& NPCIsACoin = SMBX13::vars.NPCIsACoin;
        static auto& NPCIsAVine = SMBX13::vars.NPCIsAVine;
        static auto& NPCIsAnExit = SMBX13::vars.NPCIsAnExit;
        static auto& NPCIsAParaTroopa = SMBX13::vars.NPCIsAParaTroopa;
        static auto& NPCIsCheep = SMBX13::vars.NPCIsCheep;
        static auto& NPCJumpHurt = SMBX13::vars.NPCJumpHurt;
        static auto& NPCNoClipping = SMBX13::vars.NPCNoClipping;
        static auto& NPCScore = SMBX13::vars.NPCScore;
        static auto& NPCCanWalkOn = SMBX13::vars.NPCCanWalkOn;
        static auto& NPCGrabFromTop = SMBX13::vars.NPCGrabFromTop;
        static auto& NPCTurnsAtCliffs = SMBX13::vars.NPCTurnsAtCliffs;
        static auto& NPCWontHurt = SMBX13::vars.NPCWontHurt;
        static auto& NPCMovesPlayer = SMBX13::vars.NPCMovesPlayer;
        static auto& NPCStandsOnPlayer = SMBX13::vars.NPCStandsOnPlayer;
        static auto& NPCIsGrabbable = SMBX13::vars.NPCIsGrabbable;
        static auto& NPCIsBoot = SMBX13::vars.NPCIsBoot;
        static auto& NPCIsYoshi = SMBX13::vars.NPCIsYoshi;
        static auto& NPCIsToad = SMBX13::vars.NPCIsToad;
        static auto& NPCNoYoshi = SMBX13::vars.NPCNoYoshi;
        static auto& NPCForeground = SMBX13::vars.NPCForeground;
        static auto& NPCIsABot = SMBX13::vars.NPCIsABot;
        static auto& NPCDefaultMovement = SMBX13::vars.NPCDefaultMovement;
        static auto& NPCIsVeggie = SMBX13::vars.NPCIsVeggie;
        static auto& NPCNoFireBall = SMBX13::vars.NPCNoFireBall;
        static auto& NPCNoIceBall = SMBX13::vars.NPCNoIceBall;
        static auto& NPCNoGravity = SMBX13::vars.NPCNoGravity;
        static auto& NPCFrame = SMBX13::vars.NPCFrame;
        static auto& NPCFrameSpeed = SMBX13::vars.NPCFrameSpeed;
        static auto& NPCFrameStyle = SMBX13::vars.NPCFrameStyle;
        static auto& _DONTUSE_NPCDefaults = SMBX13::vars._DONTUSE_NPCDefaults; // NOTE: Do not use this. This is fixed-size, and the arrays from it get replaced in NpcIdExtender.cpp
        static auto& BlockIsSizable = SMBX13::vars.BlockIsSizable;
        static auto& BlockSlope = SMBX13::vars.BlockSlope;
        static auto& BlockSlope2 = SMBX13::vars.BlockSlope2;
        static auto& vScreenX = SMBX13::vars.vScreenX;
        static auto& vScreenY = SMBX13::vars.vScreenY;
        static auto& qScreenX = SMBX13::vars.qScreenX;
        static auto& qScreenY = SMBX13::vars.qScreenY;
        static auto& qScreen = SMBX13::vars.qScreen;
        static auto& BlockWidth = SMBX13::vars.BlockWidth;
        static auto& BlockHeight = SMBX13::vars.BlockHeight;
        static auto& BonusWidth = SMBX13::vars.BonusWidth;
        static auto& BonusHeight = SMBX13::vars.BonusHeight;
        static auto& EffectWidth = SMBX13::vars.EffectWidth;
        static auto& EffectHeight = SMBX13::vars.EffectHeight;
        static auto& EffectDefaults = SMBX13::vars.EffectDefaults;
        static auto& SceneWidth = SMBX13::vars.SceneWidth;
        static auto& SceneHeight = SMBX13::vars.SceneHeight;
        static auto& BackgroundHasNoMask = SMBX13::vars.BackgroundHasNoMask;
        static auto& Foreground = SMBX13::vars.Foreground;
        static auto& BackgroundWidth = SMBX13::vars.BackgroundWidth;
        static auto& BackgroundHeight = SMBX13::vars.BackgroundHeight;
        static auto& BackgroundFrame = SMBX13::vars.BackgroundFrame;
        static auto& BackgroundFrameCount = SMBX13::vars.BackgroundFrameCount;
        static auto& BlockFrame = SMBX13::vars.BlockFrame;
        static auto& BlockFrame2 = SMBX13::vars.BlockFrame2;
        static auto& sBlockArray = SMBX13::vars.sBlockArray;
        static auto& sBlockNum = SMBX13::vars.sBlockNum;
        static auto& SceneFrame = SMBX13::vars.SceneFrame;
        static auto& SceneFrame2 = SMBX13::vars.SceneFrame2;
        static auto& SpecialFrame = SMBX13::vars.SpecialFrame;
        static auto& SpecialFrameCount = SMBX13::vars.SpecialFrameCount;
        static auto& TileWidth = SMBX13::vars.TileWidth;
        static auto& TileHeight = SMBX13::vars.TileHeight;
        static auto& TileFrame = SMBX13::vars.TileFrame;
        static auto& TileFrame2 = SMBX13::vars.TileFrame2;
        static auto& LevelFrame = SMBX13::vars.LevelFrame;
        static auto& LevelFrame2 = SMBX13::vars.LevelFrame2;
        static auto& BlockHasNoMask = SMBX13::vars.BlockHasNoMask;
        static auto& LevelHasNoMask = SMBX13::vars.LevelHasNoMask;
        static auto& BlockOnlyHitspot1 = SMBX13::vars.BlockOnlyHitspot1;
        static auto& BlockKills = SMBX13::vars.BlockKills;
        static auto& BlockKills2 = SMBX13::vars.BlockKills2;
        static auto& BlockHurts = SMBX13::vars.BlockHurts;
        static auto& BlockPSwitch = SMBX13::vars.BlockPSwitch;
        static auto& BlockNoClipping = SMBX13::vars.BlockNoClipping;
        static auto& CoinFrame = SMBX13::vars.CoinFrame;
        static auto& CoinFrame2 = SMBX13::vars.CoinFrame2;
        static auto& EditorCursor = SMBX13::vars.EditorCursor;
        static auto& EditorControls = SMBX13::vars.EditorControls;
        static auto& Sound = SMBX13::vars.Sound;
        static auto& SoundPause = SMBX13::vars.SoundPause;
        static auto& EndLevel = SMBX13::vars.EndLevel;
        static auto& LevelMacro = SMBX13::vars.LevelMacro;
        static auto& LevelMacroCounter = SMBX13::vars.LevelMacroCounter;
        static auto& numJoysticks = SMBX13::vars.numJoysticks;
        static auto& FileName = SMBX13::vars.FileName;
        static auto& Coins = SMBX13::vars.Coins;
        static auto& Lives = SMBX13::vars.Lives;
        static auto& EndIntro = SMBX13::vars.EndIntro;
        static auto& ExitMenu = SMBX13::vars.ExitMenu;
        static auto& LevelSelect = SMBX13::vars.LevelSelect;
        static auto& WorldPlayer = SMBX13::vars.WorldPlayer;
        static auto& LevelBeatCode = SMBX13::vars.LevelBeatCode;
        static auto& curWorldLevel = SMBX13::vars.curWorldLevel;
        static auto& curWorldMusic = SMBX13::vars.curWorldMusic;
        static auto& NoTurnBack = SMBX13::vars.NoTurnBack;
        static auto& UnderWater = SMBX13::vars.UnderWater;
        static auto& TestLevel = SMBX13::vars.TestLevel;
        static auto& FullFileName = SMBX13::vars.FullFileName;
        static auto& FileNamePath = SMBX13::vars.FileNamePath;
        static auto& GameMenu = SMBX13::vars.GameMenu;
        static auto& WorldName = SMBX13::vars.WorldName;
        static auto& selWorld = SMBX13::vars.selWorld;
        static auto& selSave = SMBX13::vars.selSave;
        static auto& PSwitchTime = SMBX13::vars.PSwitchTime;
        static auto& PSwitchStop = SMBX13::vars.PSwitchStop;
        static auto& PSwitchPlayer = SMBX13::vars.PSwitchPlayer;
        static auto& SaveSlot = SMBX13::vars.SaveSlot;
        static auto& SaveStars = SMBX13::vars.SaveStars;
        static auto& BeltDirection = SMBX13::vars.BeltDirection;
        static auto& BeatTheGame = SMBX13::vars.BeatTheGame;
        static auto& cycleCount = SMBX13::vars.cycleCount;
        static auto& fpsTime = SMBX13::vars.fpsTime;
        static auto& fpsCount = SMBX13::vars.fpsCount;
        static auto& FrameSkip = SMBX13::vars.FrameSkip;
        static auto& GoalTime = SMBX13::vars.GoalTime;
        static auto& overTime = SMBX13::vars.overTime;
        static auto& worldCurs = SMBX13::vars.worldCurs;
        static auto& minShow = SMBX13::vars.minShow;
        static auto& maxShow = SMBX13::vars.maxShow;
        static auto& Layer = SMBX13::vars.Layer;
        static auto& Events = SMBX13::vars.Events;
        static auto& ReturnWarp = SMBX13::vars.ReturnWarp;
        static auto& StartWarp = SMBX13::vars.StartWarp;
        static auto& Physics = SMBX13::vars.Physics;
        static auto& MenuCursor = SMBX13::vars.MenuCursor;
        static auto& MenuMode = SMBX13::vars.MenuMode;
        static auto& MenuCursorCanMove = SMBX13::vars.MenuCursorCanMove;
        static auto& MenuCursorCanMove2 = SMBX13::vars.MenuCursorCanMove2;
        static auto& NextFrame = SMBX13::vars.NextFrame;
        static auto& StopHit = SMBX13::vars.StopHit;
        static auto& MouseRelease = SMBX13::vars.MouseRelease;
        static auto& TestFullscreen = SMBX13::vars.TestFullscreen;
        static auto& keyDownAlt = SMBX13::vars.keyDownAlt;
        static auto& keyDownEnter = SMBX13::vars.keyDownEnter;
        static auto& BlocksSorted = SMBX13::vars.BlocksSorted;
        static auto& SingleCoop = SMBX13::vars.SingleCoop;
        static auto& CheatString = SMBX13::vars.CheatString;
        static auto& GameOutro = SMBX13::vars.GameOutro;
        static auto& CreditChop = SMBX13::vars.CreditChop;
        static auto& EndCredits = SMBX13::vars.EndCredits;
        static auto& curStars = SMBX13::vars.curStars;
        static auto& maxStars = SMBX13::vars.maxStars;
        static auto& ShadowMode = SMBX13::vars.ShadowMode;
        static auto& MultiHop = SMBX13::vars.MultiHop;
        static auto& SuperSpeed = SMBX13::vars.SuperSpeed;
        static auto& WalkAnywhere = SMBX13::vars.WalkAnywhere;
        static auto& FlyForever = SMBX13::vars.FlyForever;
        static auto& FreezeNPCs = SMBX13::vars.FreezeNPCs;
        static auto& CaptainN = SMBX13::vars.CaptainN;
        static auto& FlameThrower = SMBX13::vars.FlameThrower;
        static auto& CoinMode = SMBX13::vars.CoinMode;
        static auto& WorldUnlock = SMBX13::vars.WorldUnlock;
        static auto& MaxFPS = SMBX13::vars.MaxFPS;
        static auto& GodMode = SMBX13::vars.GodMode;
        static auto& GrabAll = SMBX13::vars.GrabAll;
        static auto& Cheater = SMBX13::vars.Cheater;
        static auto& WorldCredits = SMBX13::vars.WorldCredits;
        static auto& Score = SMBX13::vars.Score;
        static auto& Points = SMBX13::vars.Points;
        static auto& oldJumpJoy = SMBX13::vars.oldJumpJoy;
        static auto& MaxWorldStars = SMBX13::vars.MaxWorldStars;
        static auto& Debugger = SMBX13::vars.Debugger;
        static auto& SavedChar = SMBX13::vars.SavedChar;
        static auto& LoadCoins = SMBX13::vars.LoadCoins;
        static auto& LoadCoinsT = SMBX13::vars.LoadCoinsT;
        static auto& GFXBlockCustom = SMBX13::vars.GFXBlockCustom;
        static auto& GFXBlock = SMBX13::vars.GFXBlock;
        static auto& GFXBlockMask = SMBX13::vars.GFXBlockMask;
        static auto& GFXBlockBMP = SMBX13::vars.GFXBlockBMP;
        static auto& GFXBlockMaskBMP = SMBX13::vars.GFXBlockMaskBMP;
        static auto& GFXBackground2Custom = SMBX13::vars.GFXBackground2Custom;
        static auto& GFXBackground2 = SMBX13::vars.GFXBackground2;
        static auto& GFXBackground2BMP = SMBX13::vars.GFXBackground2BMP;
        static auto& GFXBackground2Height = SMBX13::vars.GFXBackground2Height;
        static auto& GFXBackground2Width = SMBX13::vars.GFXBackground2Width;
        static auto& GFXNPCCustom = SMBX13::vars.GFXNPCCustom;
        static auto& GFXNPC = SMBX13::vars.GFXNPC;
        static auto& GFXNPCMask = SMBX13::vars.GFXNPCMask;
        static auto& GFXNPCBMP = SMBX13::vars.GFXNPCBMP;
        static auto& GFXNPCMaskBMP = SMBX13::vars.GFXNPCMaskBMP;
        static auto& GFXNPCHeight = SMBX13::vars.GFXNPCHeight;
        static auto& GFXNPCWidth = SMBX13::vars.GFXNPCWidth;
        static auto& GFXEffectCustom = SMBX13::vars.GFXEffectCustom;
        static auto& GFXEffect = SMBX13::vars.GFXEffect;
        static auto& GFXEffectMask = SMBX13::vars.GFXEffectMask;
        static auto& GFXEffectBMP = SMBX13::vars.GFXEffectBMP;
        static auto& GFXEffectMaskBMP = SMBX13::vars.GFXEffectMaskBMP;
        static auto& GFXEffectHeight = SMBX13::vars.GFXEffectHeight;
        static auto& GFXEffectWidth = SMBX13::vars.GFXEffectWidth;
        static auto& GFXBackgroundCustom = SMBX13::vars.GFXBackgroundCustom;
        static auto& GFXBackground = SMBX13::vars.GFXBackground;
        static auto& GFXBackgroundMask = SMBX13::vars.GFXBackgroundMask;
        static auto& GFXBackgroundBMP = SMBX13::vars.GFXBackgroundBMP;
        static auto& GFXBackgroundMaskBMP = SMBX13::vars.GFXBackgroundMaskBMP;
        static auto& GFXBackgroundHeight = SMBX13::vars.GFXBackgroundHeight;
        static auto& GFXBackgroundWidth = SMBX13::vars.GFXBackgroundWidth;
        static auto& GFXMarioCustom = SMBX13::vars.GFXMarioCustom;
        static auto& GFXMario = SMBX13::vars.GFXMario;
        static auto& GFXMarioMask = SMBX13::vars.GFXMarioMask;
        static auto& GFXMarioBMP = SMBX13::vars.GFXMarioBMP;
        static auto& GFXMarioMaskBMP = SMBX13::vars.GFXMarioMaskBMP;
        static auto& GFXMarioHeight = SMBX13::vars.GFXMarioHeight;
        static auto& GFXMarioWidth = SMBX13::vars.GFXMarioWidth;
        static auto& GFXLuigiCustom = SMBX13::vars.GFXLuigiCustom;
        static auto& GFXLuigi = SMBX13::vars.GFXLuigi;
        static auto& GFXLuigiMask = SMBX13::vars.GFXLuigiMask;
        static auto& GFXLuigiBMP = SMBX13::vars.GFXLuigiBMP;
        static auto& GFXLuigiMaskBMP = SMBX13::vars.GFXLuigiMaskBMP;
        static auto& GFXLuigiHeight = SMBX13::vars.GFXLuigiHeight;
        static auto& GFXLuigiWidth = SMBX13::vars.GFXLuigiWidth;
        static auto& GFXPeachCustom = SMBX13::vars.GFXPeachCustom;
        static auto& GFXPeach = SMBX13::vars.GFXPeach;
        static auto& GFXPeachMask = SMBX13::vars.GFXPeachMask;
        static auto& GFXPeachBMP = SMBX13::vars.GFXPeachBMP;
        static auto& GFXPeachMaskBMP = SMBX13::vars.GFXPeachMaskBMP;
        static auto& GFXPeachHeight = SMBX13::vars.GFXPeachHeight;
        static auto& GFXPeachWidth = SMBX13::vars.GFXPeachWidth;
        static auto& GFXToadCustom = SMBX13::vars.GFXToadCustom;
        static auto& GFXToad = SMBX13::vars.GFXToad;
        static auto& GFXToadMask = SMBX13::vars.GFXToadMask;
        static auto& GFXToadBMP = SMBX13::vars.GFXToadBMP;
        static auto& GFXToadMaskBMP = SMBX13::vars.GFXToadMaskBMP;
        static auto& GFXToadHeight = SMBX13::vars.GFXToadHeight;
        static auto& GFXToadWidth = SMBX13::vars.GFXToadWidth;
        static auto& GFXLinkCustom = SMBX13::vars.GFXLinkCustom;
        static auto& GFXLink = SMBX13::vars.GFXLink;
        static auto& GFXLinkMask = SMBX13::vars.GFXLinkMask;
        static auto& GFXLinkBMP = SMBX13::vars.GFXLinkBMP;
        static auto& GFXLinkMaskBMP = SMBX13::vars.GFXLinkMaskBMP;
        static auto& GFXLinkHeight = SMBX13::vars.GFXLinkHeight;
        static auto& GFXLinkWidth = SMBX13::vars.GFXLinkWidth;
        static auto& GFXYoshiBCustom = SMBX13::vars.GFXYoshiBCustom;
        static auto& GFXYoshiB = SMBX13::vars.GFXYoshiB;
        static auto& GFXYoshiBMask = SMBX13::vars.GFXYoshiBMask;
        static auto& GFXYoshiBBMP = SMBX13::vars.GFXYoshiBBMP;
        static auto& GFXYoshiBMaskBMP = SMBX13::vars.GFXYoshiBMaskBMP;
        static auto& GFXYoshiTCustom = SMBX13::vars.GFXYoshiTCustom;
        static auto& GFXYoshiT = SMBX13::vars.GFXYoshiT;
        static auto& GFXYoshiTMask = SMBX13::vars.GFXYoshiTMask;
        static auto& GFXYoshiTBMP = SMBX13::vars.GFXYoshiTBMP;
        static auto& GFXYoshiTMaskBMP = SMBX13::vars.GFXYoshiTMaskBMP;
        static auto& GFXTileCustom = SMBX13::vars.GFXTileCustom;
        static auto& GFXTile = SMBX13::vars.GFXTile;
        static auto& GFXTileBMP = SMBX13::vars.GFXTileBMP;
        static auto& GFXTileHeight = SMBX13::vars.GFXTileHeight;
        static auto& GFXTileWidth = SMBX13::vars.GFXTileWidth;
        static auto& GFXLevelCustom = SMBX13::vars.GFXLevelCustom;
        static auto& GFXLevel = SMBX13::vars.GFXLevel;
        static auto& GFXLevelMask = SMBX13::vars.GFXLevelMask;
        static auto& GFXLevelBMP = SMBX13::vars.GFXLevelBMP;
        static auto& GFXLevelMaskBMP = SMBX13::vars.GFXLevelMaskBMP;
        static auto& GFXLevelHeight = SMBX13::vars.GFXLevelHeight;
        static auto& GFXLevelWidth = SMBX13::vars.GFXLevelWidth;
        static auto& GFXLevelBig = SMBX13::vars.GFXLevelBig;
        static auto& GFXSceneCustom = SMBX13::vars.GFXSceneCustom;
        static auto& GFXScene = SMBX13::vars.GFXScene;
        static auto& GFXSceneMask = SMBX13::vars.GFXSceneMask;
        static auto& GFXSceneBMP = SMBX13::vars.GFXSceneBMP;
        static auto& GFXSceneMaskBMP = SMBX13::vars.GFXSceneMaskBMP;
        static auto& GFXSceneHeight = SMBX13::vars.GFXSceneHeight;
        static auto& GFXSceneWidth = SMBX13::vars.GFXSceneWidth;
        static auto& GFXPathCustom = SMBX13::vars.GFXPathCustom;
        static auto& GFXPath = SMBX13::vars.GFXPath;
        static auto& GFXPathMask = SMBX13::vars.GFXPathMask;
        static auto& GFXPathBMP = SMBX13::vars.GFXPathBMP;
        static auto& GFXPathMaskBMP = SMBX13::vars.GFXPathMaskBMP;
        static auto& GFXPathHeight = SMBX13::vars.GFXPathHeight;
        static auto& GFXPathWidth = SMBX13::vars.GFXPathWidth;
        static auto& GFXPlayerCustom = SMBX13::vars.GFXPlayerCustom;
        static auto& GFXPlayer = SMBX13::vars.GFXPlayer;
        static auto& GFXPlayerMask = SMBX13::vars.GFXPlayerMask;
        static auto& GFXPlayerBMP = SMBX13::vars.GFXPlayerBMP;
        static auto& GFXPlayerMaskBMP = SMBX13::vars.GFXPlayerMaskBMP;
        static auto& GFXPlayerHeight = SMBX13::vars.GFXPlayerHeight;
        static auto& GFXPlayerWidth = SMBX13::vars.GFXPlayerWidth;
        static auto& PlayerCharacter = SMBX13::vars.PlayerCharacter;
        static auto& PlayerCharacter2 = SMBX13::vars.PlayerCharacter2;
        static auto& MenuMouseX = SMBX13::vars.MenuMouseX;
        static auto& MenuMouseY = SMBX13::vars.MenuMouseY;
        static auto& MenuMouseDown = SMBX13::vars.MenuMouseDown;
        static auto& MenuMouseBack = SMBX13::vars.MenuMouseBack;
        static auto& MenuMouseRelease = SMBX13::vars.MenuMouseRelease;
        static auto& MenuMouseMove = SMBX13::vars.MenuMouseMove;
        static auto& MenuMouseClick = SMBX13::vars.MenuMouseClick;
        static auto& NewEvent = SMBX13::vars.NewEvent;
        static auto& newEventDelay = SMBX13::vars.newEventDelay;
        static auto& newEventNum = SMBX13::vars.newEventNum;
        static auto& ForcedControls = SMBX13::vars.ForcedControls;
        static auto& ForcedControl = SMBX13::vars.ForcedControl;
        static auto& SyncCount = SMBX13::vars.SyncCount;
        static auto& noUpdate = SMBX13::vars.noUpdate;
        static auto& gameTime = SMBX13::vars.gameTime;
        static auto& noSound = SMBX13::vars.noSound;
        static auto& tempTime = SMBX13::vars.tempTime;
        static auto& BattleMode = SMBX13::vars.BattleMode;
        static auto& BattleWinner = SMBX13::vars.BattleWinner;
        static auto& BattleLives = SMBX13::vars.BattleLives;
        static auto& BattleIntro = SMBX13::vars.BattleIntro;
        static auto& BattleOutro = SMBX13::vars.BattleOutro;
        static auto& LevelName = SMBX13::vars.LevelName;
    }
}

#endif // !defined(SMBXINTERNAL_VARIABLES_H)

